/*
 * This file was generated by the Gradle 'init' task.
 *
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    id 'java-library'
    id 'maven-publish'
    id "org.sonarqube" version "6.0.1.5171" // Replace with latest scanner version number
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

dependencies {
    api 'org.hamcrest:hamcrest-core:1.3'
    api 'org.mockito:mockito-junit-jupiter:2.21.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.2.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.2.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.2.0'
    testImplementation 'junit:junit:3.8.1'
}

group = 'com.maven'
version = '9.1.14-SNAPSHOT'
description = 'SimpleWebApplication Maven Webapp'
java.sourceCompatibility = JavaVersion.VERSION_1_8

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}

sonar {
    properties {
        property "sonar.projectKey", project.findProperty("sonarProjectKey") ?: "default-project-key"
        property "sonar.projectName", project.findProperty("sonarprojectName") ?: "default-project-name"
        property "sonar.host.url", project.findProperty("sonarHostUrl") ?: "http://localhost:9000"
        property "sonar.login", project.findProperty("sonarLogin") ?: System.getenv("SONAR_LOGIN")
        property("sonar.java.binaries", "${project.buildDir}/classes")
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java // Publishes the Java library artifact
        }
    }
    repositories {
        maven {
            name = "nexus"
            url = uri("http://13.126.80.255:8081/repository/maven-snapshots/")
            allowInsecureProtocol = true
            credentials {
                username = project.findProperty("nexusUsername") ?: System.getenv("NEXUS_USERNAME")
                password = project.findProperty("nexusPassword") ?: System.getenv("NEXUS_PASSWORD")
            }
        }
    }
}

